{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { isServer, isValidTimeout, noop, replaceEqualDeep, shallowEqualObjects, timeUntilStale } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { focusManager } from './focusManager';\nimport { Subscribable } from './subscribable';\nimport { getLogger } from './logger';\nexport var QueryObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(QueryObserver, _Subscribable);\n\n  function QueryObserver(client, options) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n    _this.options = options;\n    _this.trackedProps = [];\n\n    _this.bindMethods();\n\n    _this.setOptions(options);\n\n    return _this;\n  }\n\n  var _proto = QueryObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n  };\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (this.listeners.length === 1) {\n      this.currentQuery.addObserver(this);\n\n      if (shouldFetchOnMount(this.currentQuery, this.options)) {\n        this.executeFetch();\n      }\n\n      this.updateTimers();\n    }\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      this.destroy();\n    }\n  };\n\n  _proto.shouldFetchOnReconnect = function shouldFetchOnReconnect() {\n    return _shouldFetchOnReconnect(this.currentQuery, this.options);\n  };\n\n  _proto.shouldFetchOnWindowFocus = function shouldFetchOnWindowFocus() {\n    return _shouldFetchOnWindowFocus(this.currentQuery, this.options);\n  };\n\n  _proto.destroy = function destroy() {\n    this.listeners = [];\n    this.clearTimers();\n    this.currentQuery.removeObserver(this);\n  };\n\n  _proto.setOptions = function setOptions(options, notifyOptions) {\n    var prevOptions = this.options;\n    var prevQuery = this.currentQuery;\n    this.options = this.client.defaultQueryObserverOptions(options);\n\n    if (typeof this.options.enabled !== 'undefined' && typeof this.options.enabled !== 'boolean') {\n      throw new Error('Expected enabled to be a boolean');\n    } // Keep previous query key if the user does not supply one\n\n\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey;\n    }\n\n    this.updateQuery();\n    var mounted = this.hasListeners(); // Fetch if there are subscribers\n\n    if (mounted && shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) {\n      this.executeFetch();\n    } // Update result\n\n\n    this.updateResult(notifyOptions); // Update stale interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) {\n      this.updateStaleTimeout();\n    } // Update refetch interval if needed\n\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.refetchInterval !== prevOptions.refetchInterval)) {\n      this.updateRefetchInterval();\n    }\n  };\n\n  _proto.getOptimisticResult = function getOptimisticResult(options) {\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return this.createResult(query, defaultedOptions);\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  };\n\n  _proto.trackResult = function trackResult(result) {\n    var _this2 = this;\n\n    var trackedResult = {};\n    Object.keys(result).forEach(function (key) {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: function get() {\n          var typedKey = key;\n\n          if (!_this2.trackedProps.includes(typedKey)) {\n            _this2.trackedProps.push(typedKey);\n          }\n\n          return result[typedKey];\n        }\n      });\n    });\n    return trackedResult;\n  };\n\n  _proto.getNextResult = function getNextResult(options) {\n    var _this3 = this;\n\n    return new Promise(function (resolve, reject) {\n      var unsubscribe = _this3.subscribe(function (result) {\n        if (!result.isFetching) {\n          unsubscribe();\n\n          if (result.isError && (options == null ? void 0 : options.throwOnError)) {\n            reject(result.error);\n          } else {\n            resolve(result);\n          }\n        }\n      });\n    });\n  };\n\n  _proto.getCurrentQuery = function getCurrentQuery() {\n    return this.currentQuery;\n  };\n\n  _proto.remove = function remove() {\n    this.client.getQueryCache().remove(this.currentQuery);\n  };\n\n  _proto.refetch = function refetch(options) {\n    return this.fetch(options);\n  };\n\n  _proto.fetchOptimistic = function fetchOptimistic(options) {\n    var _this4 = this;\n\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return query.fetch().then(function () {\n      return _this4.createResult(query, defaultedOptions);\n    });\n  };\n\n  _proto.fetch = function fetch(fetchOptions) {\n    var _this5 = this;\n\n    return this.executeFetch(fetchOptions).then(function () {\n      _this5.updateResult();\n\n      return _this5.currentResult;\n    });\n  };\n\n  _proto.executeFetch = function executeFetch(fetchOptions) {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery(); // Fetch\n\n    var promise = this.currentQuery.fetch(this.options, fetchOptions);\n\n    if (!(fetchOptions == null ? void 0 : fetchOptions.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  };\n\n  _proto.updateStaleTimeout = function updateStaleTimeout() {\n    var _this6 = this;\n\n    this.clearStaleTimeout();\n\n    if (isServer || this.currentResult.isStale || !isValidTimeout(this.options.staleTime)) {\n      return;\n    }\n\n    var time = timeUntilStale(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n\n    var timeout = time + 1;\n    this.staleTimeoutId = setTimeout(function () {\n      if (!_this6.currentResult.isStale) {\n        _this6.updateResult();\n      }\n    }, timeout);\n  };\n\n  _proto.updateRefetchInterval = function updateRefetchInterval() {\n    var _this7 = this;\n\n    this.clearRefetchInterval();\n\n    if (isServer || this.options.enabled === false || !isValidTimeout(this.options.refetchInterval)) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(function () {\n      if (_this7.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        _this7.executeFetch();\n      }\n    }, this.options.refetchInterval);\n  };\n\n  _proto.updateTimers = function updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval();\n  };\n\n  _proto.clearTimers = function clearTimers() {\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n  };\n\n  _proto.clearStaleTimeout = function clearStaleTimeout() {\n    clearTimeout(this.staleTimeoutId);\n    this.staleTimeoutId = undefined;\n  };\n\n  _proto.clearRefetchInterval = function clearRefetchInterval() {\n    clearInterval(this.refetchIntervalId);\n    this.refetchIntervalId = undefined;\n  };\n\n  _proto.createResult = function createResult(query, options) {\n    var prevQuery = this.currentQuery;\n    var prevOptions = this.options;\n    var prevResult = this.currentResult;\n    var prevResultState = this.currentResultState;\n    var prevResultOptions = this.currentResultOptions;\n    var queryChange = query !== prevQuery;\n    var queryInitialState = queryChange ? query.state : this.currentQueryInitialState;\n    var prevQueryResult = queryChange ? this.currentResult : this.previousQueryResult;\n    var state = query.state;\n    var dataUpdatedAt = state.dataUpdatedAt,\n        error = state.error,\n        errorUpdatedAt = state.errorUpdatedAt,\n        isFetching = state.isFetching,\n        status = state.status;\n    var isPreviousData = false;\n    var isPlaceholderData = false;\n    var data; // Optimistically set result in fetching state if needed\n\n    if (options.optimisticResults) {\n      var mounted = this.hasListeners();\n      var fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      var fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n\n      if (fetchOnMount || fetchOptionally) {\n        isFetching = true;\n\n        if (!dataUpdatedAt) {\n          status = 'loading';\n        }\n      }\n    } // Keep previous data if needed\n\n\n    if (options.keepPreviousData && !state.dataUpdateCount && (prevQueryResult == null ? void 0 : prevQueryResult.isSuccess) && status !== 'error') {\n      data = prevQueryResult.data;\n      dataUpdatedAt = prevQueryResult.dataUpdatedAt;\n      status = prevQueryResult.status;\n      isPreviousData = true;\n    } // Select data if needed\n    else if (options.select && typeof state.data !== 'undefined') {\n      // Memoize select result\n      if (prevResult && state.data === (prevResultState == null ? void 0 : prevResultState.data) && options.select === (prevResultOptions == null ? void 0 : prevResultOptions.select)) {\n        data = prevResult.data;\n      } else {\n        try {\n          data = options.select(state.data);\n\n          if (options.structuralSharing !== false) {\n            data = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, data);\n          }\n        } catch (selectError) {\n          getLogger().error(selectError);\n          error = selectError;\n          errorUpdatedAt = Date.now();\n          status = 'error';\n        }\n      }\n    } // Use query data\n    else {\n      data = state.data;\n    } // Show placeholder data if needed\n\n\n    if (typeof options.placeholderData !== 'undefined' && typeof data === 'undefined' && status === 'loading') {\n      var placeholderData; // Memoize placeholder data\n\n      if ((prevResult == null ? void 0 : prevResult.isPlaceholderData) && options.placeholderData === (prevResultOptions == null ? void 0 : prevResultOptions.placeholderData)) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === 'function' ? options.placeholderData() : options.placeholderData;\n      }\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success';\n        data = placeholderData;\n        isPlaceholderData = true;\n      }\n    }\n\n    var result = {\n      status: status,\n      isLoading: status === 'loading',\n      isSuccess: status === 'success',\n      isError: status === 'error',\n      isIdle: status === 'idle',\n      data: data,\n      dataUpdatedAt: dataUpdatedAt,\n      error: error,\n      errorUpdatedAt: errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching: isFetching,\n      isLoadingError: status === 'error' && state.dataUpdatedAt === 0,\n      isPlaceholderData: isPlaceholderData,\n      isPreviousData: isPreviousData,\n      isRefetchError: status === 'error' && state.dataUpdatedAt !== 0,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      remove: this.remove\n    };\n    return result;\n  };\n\n  _proto.shouldNotifyListeners = function shouldNotifyListeners(result, prevResult) {\n    if (!prevResult) {\n      return true;\n    }\n\n    if (result === prevResult) {\n      return false;\n    }\n\n    var _this$options = this.options,\n        notifyOnChangeProps = _this$options.notifyOnChangeProps,\n        notifyOnChangePropsExclusions = _this$options.notifyOnChangePropsExclusions;\n\n    if (!notifyOnChangeProps && !notifyOnChangePropsExclusions) {\n      return true;\n    }\n\n    if (notifyOnChangeProps === 'tracked' && !this.trackedProps.length) {\n      return true;\n    }\n\n    var includedProps = notifyOnChangeProps === 'tracked' ? this.trackedProps : notifyOnChangeProps;\n    return Object.keys(result).some(function (key) {\n      var typedKey = key;\n      var changed = result[typedKey] !== prevResult[typedKey];\n      var isIncluded = includedProps == null ? void 0 : includedProps.some(function (x) {\n        return x === key;\n      });\n      var isExcluded = notifyOnChangePropsExclusions == null ? void 0 : notifyOnChangePropsExclusions.some(function (x) {\n        return x === key;\n      });\n      return changed && !isExcluded && (!includedProps || isIncluded);\n    });\n  };\n\n  _proto.updateResult = function updateResult(notifyOptions) {\n    var prevResult = this.currentResult;\n    this.currentResult = this.createResult(this.currentQuery, this.options);\n    this.currentResultState = this.currentQuery.state;\n    this.currentResultOptions = this.options; // Only notify if something has changed\n\n    if (shallowEqualObjects(this.currentResult, prevResult)) {\n      return;\n    } // Determine which callbacks to trigger\n\n\n    var defaultNotifyOptions = {\n      cache: true\n    };\n\n    if ((notifyOptions == null ? void 0 : notifyOptions.listeners) !== false && this.shouldNotifyListeners(this.currentResult, prevResult)) {\n      defaultNotifyOptions.listeners = true;\n    }\n\n    this.notify(_extends({}, defaultNotifyOptions, notifyOptions));\n  };\n\n  _proto.updateQuery = function updateQuery() {\n    var query = this.client.getQueryCache().build(this.client, this.options);\n\n    if (query === this.currentQuery) {\n      return;\n    }\n\n    var prevQuery = this.currentQuery;\n    this.currentQuery = query;\n    this.currentQueryInitialState = query.state;\n    this.previousQueryResult = this.currentResult;\n\n    if (this.hasListeners()) {\n      prevQuery == null ? void 0 : prevQuery.removeObserver(this);\n      query.addObserver(this);\n    }\n  };\n\n  _proto.onQueryUpdate = function onQueryUpdate(action) {\n    var notifyOptions = {};\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error') {\n      notifyOptions.onError = true;\n    }\n\n    this.updateResult(notifyOptions);\n\n    if (this.hasListeners()) {\n      this.updateTimers();\n    }\n  };\n\n  _proto.notify = function notify(notifyOptions) {\n    var _this8 = this;\n\n    notifyManager.batch(function () {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        _this8.options.onSuccess == null ? void 0 : _this8.options.onSuccess(_this8.currentResult.data);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(_this8.currentResult.data, null);\n      } else if (notifyOptions.onError) {\n        _this8.options.onError == null ? void 0 : _this8.options.onError(_this8.currentResult.error);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(undefined, _this8.currentResult.error);\n      } // Then trigger the listeners\n\n\n      if (notifyOptions.listeners) {\n        _this8.listeners.forEach(function (listener) {\n          listener(_this8.currentResult);\n        });\n      } // Then the cache listeners\n\n\n      if (notifyOptions.cache) {\n        _this8.client.getQueryCache().notify({\n          query: _this8.currentQuery,\n          type: 'observerResultsUpdated'\n        });\n      }\n    });\n  };\n\n  return QueryObserver;\n}(Subscribable);\n\nfunction shouldLoadOnMount(query, options) {\n  return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === 'error' && options.retryOnMount === false);\n}\n\nfunction shouldRefetchOnMount(query, options) {\n  return options.enabled !== false && query.state.dataUpdatedAt > 0 && (options.refetchOnMount === 'always' || options.refetchOnMount !== false && isStale(query, options));\n}\n\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || shouldRefetchOnMount(query, options);\n}\n\nfunction _shouldFetchOnReconnect(query, options) {\n  return options.enabled !== false && (options.refetchOnReconnect === 'always' || options.refetchOnReconnect !== false && isStale(query, options));\n}\n\nfunction _shouldFetchOnWindowFocus(query, options) {\n  return options.enabled !== false && (options.refetchOnWindowFocus === 'always' || options.refetchOnWindowFocus !== false && isStale(query, options));\n}\n\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && isStale(query, options);\n}\n\nfunction isStale(query, options) {\n  return query.isStaleByTime(options.staleTime);\n}","map":{"version":3,"names":["_extends","_inheritsLoose","isServer","isValidTimeout","noop","replaceEqualDeep","shallowEqualObjects","timeUntilStale","notifyManager","focusManager","Subscribable","getLogger","QueryObserver","_Subscribable","client","options","_this","call","trackedProps","bindMethods","setOptions","_proto","prototype","remove","bind","refetch","onSubscribe","listeners","length","currentQuery","addObserver","shouldFetchOnMount","executeFetch","updateTimers","onUnsubscribe","destroy","shouldFetchOnReconnect","_shouldFetchOnReconnect","shouldFetchOnWindowFocus","_shouldFetchOnWindowFocus","clearTimers","removeObserver","notifyOptions","prevOptions","prevQuery","defaultQueryObserverOptions","enabled","Error","queryKey","updateQuery","mounted","hasListeners","shouldFetchOptionally","updateResult","staleTime","updateStaleTimeout","refetchInterval","updateRefetchInterval","getOptimisticResult","defaultedOptions","query","getQueryCache","build","createResult","getCurrentResult","currentResult","trackResult","result","_this2","trackedResult","Object","keys","forEach","key","defineProperty","configurable","enumerable","get","typedKey","includes","push","getNextResult","_this3","Promise","resolve","reject","unsubscribe","subscribe","isFetching","isError","throwOnError","error","getCurrentQuery","fetch","fetchOptimistic","_this4","then","fetchOptions","_this5","promise","catch","_this6","clearStaleTimeout","isStale","time","dataUpdatedAt","timeout","staleTimeoutId","setTimeout","_this7","clearRefetchInterval","refetchIntervalId","setInterval","refetchIntervalInBackground","isFocused","clearTimeout","undefined","clearInterval","prevResult","prevResultState","currentResultState","prevResultOptions","currentResultOptions","queryChange","queryInitialState","state","currentQueryInitialState","prevQueryResult","previousQueryResult","errorUpdatedAt","status","isPreviousData","isPlaceholderData","data","optimisticResults","fetchOnMount","fetchOptionally","keepPreviousData","dataUpdateCount","isSuccess","select","structuralSharing","selectError","Date","now","placeholderData","isLoading","isIdle","failureCount","fetchFailureCount","isFetched","errorUpdateCount","isFetchedAfterMount","isLoadingError","isRefetchError","shouldNotifyListeners","_this$options","notifyOnChangeProps","notifyOnChangePropsExclusions","includedProps","some","changed","isIncluded","x","isExcluded","defaultNotifyOptions","cache","notify","onQueryUpdate","action","type","onSuccess","onError","_this8","batch","onSettled","listener","shouldLoadOnMount","retryOnMount","shouldRefetchOnMount","refetchOnMount","refetchOnReconnect","refetchOnWindowFocus","isStaleByTime"],"sources":["/Users/seanley/Desktop/Benchmetric/client/node_modules/react-query/es/core/queryObserver.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { isServer, isValidTimeout, noop, replaceEqualDeep, shallowEqualObjects, timeUntilStale } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { focusManager } from './focusManager';\nimport { Subscribable } from './subscribable';\nimport { getLogger } from './logger';\nexport var QueryObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(QueryObserver, _Subscribable);\n\n  function QueryObserver(client, options) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n    _this.options = options;\n    _this.trackedProps = [];\n\n    _this.bindMethods();\n\n    _this.setOptions(options);\n\n    return _this;\n  }\n\n  var _proto = QueryObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n  };\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (this.listeners.length === 1) {\n      this.currentQuery.addObserver(this);\n\n      if (shouldFetchOnMount(this.currentQuery, this.options)) {\n        this.executeFetch();\n      }\n\n      this.updateTimers();\n    }\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      this.destroy();\n    }\n  };\n\n  _proto.shouldFetchOnReconnect = function shouldFetchOnReconnect() {\n    return _shouldFetchOnReconnect(this.currentQuery, this.options);\n  };\n\n  _proto.shouldFetchOnWindowFocus = function shouldFetchOnWindowFocus() {\n    return _shouldFetchOnWindowFocus(this.currentQuery, this.options);\n  };\n\n  _proto.destroy = function destroy() {\n    this.listeners = [];\n    this.clearTimers();\n    this.currentQuery.removeObserver(this);\n  };\n\n  _proto.setOptions = function setOptions(options, notifyOptions) {\n    var prevOptions = this.options;\n    var prevQuery = this.currentQuery;\n    this.options = this.client.defaultQueryObserverOptions(options);\n\n    if (typeof this.options.enabled !== 'undefined' && typeof this.options.enabled !== 'boolean') {\n      throw new Error('Expected enabled to be a boolean');\n    } // Keep previous query key if the user does not supply one\n\n\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey;\n    }\n\n    this.updateQuery();\n    var mounted = this.hasListeners(); // Fetch if there are subscribers\n\n    if (mounted && shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) {\n      this.executeFetch();\n    } // Update result\n\n\n    this.updateResult(notifyOptions); // Update stale interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) {\n      this.updateStaleTimeout();\n    } // Update refetch interval if needed\n\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.refetchInterval !== prevOptions.refetchInterval)) {\n      this.updateRefetchInterval();\n    }\n  };\n\n  _proto.getOptimisticResult = function getOptimisticResult(options) {\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return this.createResult(query, defaultedOptions);\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  };\n\n  _proto.trackResult = function trackResult(result) {\n    var _this2 = this;\n\n    var trackedResult = {};\n    Object.keys(result).forEach(function (key) {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: function get() {\n          var typedKey = key;\n\n          if (!_this2.trackedProps.includes(typedKey)) {\n            _this2.trackedProps.push(typedKey);\n          }\n\n          return result[typedKey];\n        }\n      });\n    });\n    return trackedResult;\n  };\n\n  _proto.getNextResult = function getNextResult(options) {\n    var _this3 = this;\n\n    return new Promise(function (resolve, reject) {\n      var unsubscribe = _this3.subscribe(function (result) {\n        if (!result.isFetching) {\n          unsubscribe();\n\n          if (result.isError && (options == null ? void 0 : options.throwOnError)) {\n            reject(result.error);\n          } else {\n            resolve(result);\n          }\n        }\n      });\n    });\n  };\n\n  _proto.getCurrentQuery = function getCurrentQuery() {\n    return this.currentQuery;\n  };\n\n  _proto.remove = function remove() {\n    this.client.getQueryCache().remove(this.currentQuery);\n  };\n\n  _proto.refetch = function refetch(options) {\n    return this.fetch(options);\n  };\n\n  _proto.fetchOptimistic = function fetchOptimistic(options) {\n    var _this4 = this;\n\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return query.fetch().then(function () {\n      return _this4.createResult(query, defaultedOptions);\n    });\n  };\n\n  _proto.fetch = function fetch(fetchOptions) {\n    var _this5 = this;\n\n    return this.executeFetch(fetchOptions).then(function () {\n      _this5.updateResult();\n\n      return _this5.currentResult;\n    });\n  };\n\n  _proto.executeFetch = function executeFetch(fetchOptions) {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery(); // Fetch\n\n    var promise = this.currentQuery.fetch(this.options, fetchOptions);\n\n    if (!(fetchOptions == null ? void 0 : fetchOptions.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  };\n\n  _proto.updateStaleTimeout = function updateStaleTimeout() {\n    var _this6 = this;\n\n    this.clearStaleTimeout();\n\n    if (isServer || this.currentResult.isStale || !isValidTimeout(this.options.staleTime)) {\n      return;\n    }\n\n    var time = timeUntilStale(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n\n    var timeout = time + 1;\n    this.staleTimeoutId = setTimeout(function () {\n      if (!_this6.currentResult.isStale) {\n        _this6.updateResult();\n      }\n    }, timeout);\n  };\n\n  _proto.updateRefetchInterval = function updateRefetchInterval() {\n    var _this7 = this;\n\n    this.clearRefetchInterval();\n\n    if (isServer || this.options.enabled === false || !isValidTimeout(this.options.refetchInterval)) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(function () {\n      if (_this7.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        _this7.executeFetch();\n      }\n    }, this.options.refetchInterval);\n  };\n\n  _proto.updateTimers = function updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval();\n  };\n\n  _proto.clearTimers = function clearTimers() {\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n  };\n\n  _proto.clearStaleTimeout = function clearStaleTimeout() {\n    clearTimeout(this.staleTimeoutId);\n    this.staleTimeoutId = undefined;\n  };\n\n  _proto.clearRefetchInterval = function clearRefetchInterval() {\n    clearInterval(this.refetchIntervalId);\n    this.refetchIntervalId = undefined;\n  };\n\n  _proto.createResult = function createResult(query, options) {\n    var prevQuery = this.currentQuery;\n    var prevOptions = this.options;\n    var prevResult = this.currentResult;\n    var prevResultState = this.currentResultState;\n    var prevResultOptions = this.currentResultOptions;\n    var queryChange = query !== prevQuery;\n    var queryInitialState = queryChange ? query.state : this.currentQueryInitialState;\n    var prevQueryResult = queryChange ? this.currentResult : this.previousQueryResult;\n    var state = query.state;\n    var dataUpdatedAt = state.dataUpdatedAt,\n        error = state.error,\n        errorUpdatedAt = state.errorUpdatedAt,\n        isFetching = state.isFetching,\n        status = state.status;\n    var isPreviousData = false;\n    var isPlaceholderData = false;\n    var data; // Optimistically set result in fetching state if needed\n\n    if (options.optimisticResults) {\n      var mounted = this.hasListeners();\n      var fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      var fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n\n      if (fetchOnMount || fetchOptionally) {\n        isFetching = true;\n\n        if (!dataUpdatedAt) {\n          status = 'loading';\n        }\n      }\n    } // Keep previous data if needed\n\n\n    if (options.keepPreviousData && !state.dataUpdateCount && (prevQueryResult == null ? void 0 : prevQueryResult.isSuccess) && status !== 'error') {\n      data = prevQueryResult.data;\n      dataUpdatedAt = prevQueryResult.dataUpdatedAt;\n      status = prevQueryResult.status;\n      isPreviousData = true;\n    } // Select data if needed\n    else if (options.select && typeof state.data !== 'undefined') {\n        // Memoize select result\n        if (prevResult && state.data === (prevResultState == null ? void 0 : prevResultState.data) && options.select === (prevResultOptions == null ? void 0 : prevResultOptions.select)) {\n          data = prevResult.data;\n        } else {\n          try {\n            data = options.select(state.data);\n\n            if (options.structuralSharing !== false) {\n              data = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, data);\n            }\n          } catch (selectError) {\n            getLogger().error(selectError);\n            error = selectError;\n            errorUpdatedAt = Date.now();\n            status = 'error';\n          }\n        }\n      } // Use query data\n      else {\n          data = state.data;\n        } // Show placeholder data if needed\n\n\n    if (typeof options.placeholderData !== 'undefined' && typeof data === 'undefined' && status === 'loading') {\n      var placeholderData; // Memoize placeholder data\n\n      if ((prevResult == null ? void 0 : prevResult.isPlaceholderData) && options.placeholderData === (prevResultOptions == null ? void 0 : prevResultOptions.placeholderData)) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === 'function' ? options.placeholderData() : options.placeholderData;\n      }\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success';\n        data = placeholderData;\n        isPlaceholderData = true;\n      }\n    }\n\n    var result = {\n      status: status,\n      isLoading: status === 'loading',\n      isSuccess: status === 'success',\n      isError: status === 'error',\n      isIdle: status === 'idle',\n      data: data,\n      dataUpdatedAt: dataUpdatedAt,\n      error: error,\n      errorUpdatedAt: errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching: isFetching,\n      isLoadingError: status === 'error' && state.dataUpdatedAt === 0,\n      isPlaceholderData: isPlaceholderData,\n      isPreviousData: isPreviousData,\n      isRefetchError: status === 'error' && state.dataUpdatedAt !== 0,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      remove: this.remove\n    };\n    return result;\n  };\n\n  _proto.shouldNotifyListeners = function shouldNotifyListeners(result, prevResult) {\n    if (!prevResult) {\n      return true;\n    }\n\n    if (result === prevResult) {\n      return false;\n    }\n\n    var _this$options = this.options,\n        notifyOnChangeProps = _this$options.notifyOnChangeProps,\n        notifyOnChangePropsExclusions = _this$options.notifyOnChangePropsExclusions;\n\n    if (!notifyOnChangeProps && !notifyOnChangePropsExclusions) {\n      return true;\n    }\n\n    if (notifyOnChangeProps === 'tracked' && !this.trackedProps.length) {\n      return true;\n    }\n\n    var includedProps = notifyOnChangeProps === 'tracked' ? this.trackedProps : notifyOnChangeProps;\n    return Object.keys(result).some(function (key) {\n      var typedKey = key;\n      var changed = result[typedKey] !== prevResult[typedKey];\n      var isIncluded = includedProps == null ? void 0 : includedProps.some(function (x) {\n        return x === key;\n      });\n      var isExcluded = notifyOnChangePropsExclusions == null ? void 0 : notifyOnChangePropsExclusions.some(function (x) {\n        return x === key;\n      });\n      return changed && !isExcluded && (!includedProps || isIncluded);\n    });\n  };\n\n  _proto.updateResult = function updateResult(notifyOptions) {\n    var prevResult = this.currentResult;\n    this.currentResult = this.createResult(this.currentQuery, this.options);\n    this.currentResultState = this.currentQuery.state;\n    this.currentResultOptions = this.options; // Only notify if something has changed\n\n    if (shallowEqualObjects(this.currentResult, prevResult)) {\n      return;\n    } // Determine which callbacks to trigger\n\n\n    var defaultNotifyOptions = {\n      cache: true\n    };\n\n    if ((notifyOptions == null ? void 0 : notifyOptions.listeners) !== false && this.shouldNotifyListeners(this.currentResult, prevResult)) {\n      defaultNotifyOptions.listeners = true;\n    }\n\n    this.notify(_extends({}, defaultNotifyOptions, notifyOptions));\n  };\n\n  _proto.updateQuery = function updateQuery() {\n    var query = this.client.getQueryCache().build(this.client, this.options);\n\n    if (query === this.currentQuery) {\n      return;\n    }\n\n    var prevQuery = this.currentQuery;\n    this.currentQuery = query;\n    this.currentQueryInitialState = query.state;\n    this.previousQueryResult = this.currentResult;\n\n    if (this.hasListeners()) {\n      prevQuery == null ? void 0 : prevQuery.removeObserver(this);\n      query.addObserver(this);\n    }\n  };\n\n  _proto.onQueryUpdate = function onQueryUpdate(action) {\n    var notifyOptions = {};\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error') {\n      notifyOptions.onError = true;\n    }\n\n    this.updateResult(notifyOptions);\n\n    if (this.hasListeners()) {\n      this.updateTimers();\n    }\n  };\n\n  _proto.notify = function notify(notifyOptions) {\n    var _this8 = this;\n\n    notifyManager.batch(function () {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        _this8.options.onSuccess == null ? void 0 : _this8.options.onSuccess(_this8.currentResult.data);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(_this8.currentResult.data, null);\n      } else if (notifyOptions.onError) {\n        _this8.options.onError == null ? void 0 : _this8.options.onError(_this8.currentResult.error);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(undefined, _this8.currentResult.error);\n      } // Then trigger the listeners\n\n\n      if (notifyOptions.listeners) {\n        _this8.listeners.forEach(function (listener) {\n          listener(_this8.currentResult);\n        });\n      } // Then the cache listeners\n\n\n      if (notifyOptions.cache) {\n        _this8.client.getQueryCache().notify({\n          query: _this8.currentQuery,\n          type: 'observerResultsUpdated'\n        });\n      }\n    });\n  };\n\n  return QueryObserver;\n}(Subscribable);\n\nfunction shouldLoadOnMount(query, options) {\n  return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === 'error' && options.retryOnMount === false);\n}\n\nfunction shouldRefetchOnMount(query, options) {\n  return options.enabled !== false && query.state.dataUpdatedAt > 0 && (options.refetchOnMount === 'always' || options.refetchOnMount !== false && isStale(query, options));\n}\n\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || shouldRefetchOnMount(query, options);\n}\n\nfunction _shouldFetchOnReconnect(query, options) {\n  return options.enabled !== false && (options.refetchOnReconnect === 'always' || options.refetchOnReconnect !== false && isStale(query, options));\n}\n\nfunction _shouldFetchOnWindowFocus(query, options) {\n  return options.enabled !== false && (options.refetchOnWindowFocus === 'always' || options.refetchOnWindowFocus !== false && isStale(query, options));\n}\n\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && isStale(query, options);\n}\n\nfunction isStale(query, options) {\n  return query.isStaleByTime(options.staleTime);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}