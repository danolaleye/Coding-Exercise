{"ast":null,"code":"const BASEURL = \"http://localhost:3001/\";\nexport const useApi = () => {\n  async function getRequest(_ref) {\n    let {\n      method = \"GET\",\n      apiBaseUrl = BASEURL,\n      endpoint,\n      params,\n      responseType = null\n    } = _ref;\n    let url = apiBaseUrl + endpoint;\n    const options = {\n      method\n    };\n    if (params) if (method === \"POST\") {\n      options.headers[\"Content-Type\"] = \"application/json\";\n      options.body = JSON.stringify(params);\n    } else {\n      const queryString = Object.keys(params).map(key => `${key}=${params[key]}`).join(\"&\");\n      url += `?${queryString}`;\n    }\n    console.log(\"Making request\", {\n      url,\n      options\n    });\n    return fetch(url, options).then(async res => ({\n      status: res.status,\n      data: responseType ? res[responseType]() : await res.json()\n    })).then(_ref2 => {\n      let {\n        status,\n        data\n      } = _ref2;\n\n      if (status < 200 || status > 299) {\n        const error = new Error(`${data.type}: ${data.message}`);\n        error.code = data.code;\n        error.status = status;\n        throw error;\n      }\n\n      return data;\n    });\n  }\n\n  return {\n    getRequest\n  };\n};","map":{"version":3,"names":["BASEURL","useApi","getRequest","method","apiBaseUrl","endpoint","params","responseType","url","options","headers","body","JSON","stringify","queryString","Object","keys","map","key","join","console","log","fetch","then","res","status","data","json","error","Error","type","message","code"],"sources":["/Users/seanley/Desktop/Benchmetric/client/src/hooks/api/index.js"],"sourcesContent":["const BASEURL = \"http://localhost:3001/\";\n\nexport const useApi = () => {\n  async function getRequest({\n    method = \"GET\",\n    apiBaseUrl = BASEURL,\n    endpoint,\n    params,\n    responseType = null,\n  }) {\n    let url = apiBaseUrl + endpoint;\n\n    const options = {\n      method,\n    };\n\n    if (params)\n      if (method === \"POST\") {\n        options.headers[\"Content-Type\"] = \"application/json\";\n        options.body = JSON.stringify(params);\n      } else {\n        const queryString = Object.keys(params)\n          .map((key) => `${key}=${params[key]}`)\n          .join(\"&\");\n        url += `?${queryString}`;\n      }\n\n    console.log(\"Making request\", {\n      url,\n      options,\n    });\n    return fetch(url, options)\n      .then(async (res) => ({\n        status: res.status,\n        data: responseType ? res[responseType]() : await res.json(),\n      }))\n      .then(({ status, data }) => {\n        if (status < 200 || status > 299) {\n          const error = new Error(`${data.type}: ${data.message}`);\n          error.code = data.code;\n          error.status = status;\n          throw error;\n        }\n\n        return data;\n      });\n  }\n\n  return {\n    getRequest,\n  };\n};\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,wBAAhB;AAEA,OAAO,MAAMC,MAAM,GAAG,MAAM;EAC1B,eAAeC,UAAf,OAMG;IAAA,IANuB;MACxBC,MAAM,GAAG,KADe;MAExBC,UAAU,GAAGJ,OAFW;MAGxBK,QAHwB;MAIxBC,MAJwB;MAKxBC,YAAY,GAAG;IALS,CAMvB;IACD,IAAIC,GAAG,GAAGJ,UAAU,GAAGC,QAAvB;IAEA,MAAMI,OAAO,GAAG;MACdN;IADc,CAAhB;IAIA,IAAIG,MAAJ,EACE,IAAIH,MAAM,KAAK,MAAf,EAAuB;MACrBM,OAAO,CAACC,OAAR,CAAgB,cAAhB,IAAkC,kBAAlC;MACAD,OAAO,CAACE,IAAR,GAAeC,IAAI,CAACC,SAAL,CAAeP,MAAf,CAAf;IACD,CAHD,MAGO;MACL,MAAMQ,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAYV,MAAZ,EACjBW,GADiB,CACZC,GAAD,IAAU,GAAEA,GAAI,IAAGZ,MAAM,CAACY,GAAD,CAAM,EADlB,EAEjBC,IAFiB,CAEZ,GAFY,CAApB;MAGAX,GAAG,IAAK,IAAGM,WAAY,EAAvB;IACD;IAEHM,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B;MAC5Bb,GAD4B;MAE5BC;IAF4B,CAA9B;IAIA,OAAOa,KAAK,CAACd,GAAD,EAAMC,OAAN,CAAL,CACJc,IADI,CACC,MAAOC,GAAP,KAAgB;MACpBC,MAAM,EAAED,GAAG,CAACC,MADQ;MAEpBC,IAAI,EAAEnB,YAAY,GAAGiB,GAAG,CAACjB,YAAD,CAAH,EAAH,GAAyB,MAAMiB,GAAG,CAACG,IAAJ;IAF7B,CAAhB,CADD,EAKJJ,IALI,CAKC,SAAsB;MAAA,IAArB;QAAEE,MAAF;QAAUC;MAAV,CAAqB;;MAC1B,IAAID,MAAM,GAAG,GAAT,IAAgBA,MAAM,GAAG,GAA7B,EAAkC;QAChC,MAAMG,KAAK,GAAG,IAAIC,KAAJ,CAAW,GAAEH,IAAI,CAACI,IAAK,KAAIJ,IAAI,CAACK,OAAQ,EAAxC,CAAd;QACAH,KAAK,CAACI,IAAN,GAAaN,IAAI,CAACM,IAAlB;QACAJ,KAAK,CAACH,MAAN,GAAeA,MAAf;QACA,MAAMG,KAAN;MACD;;MAED,OAAOF,IAAP;IACD,CAdI,CAAP;EAeD;;EAED,OAAO;IACLxB;EADK,CAAP;AAGD,CAjDM"},"metadata":{},"sourceType":"module"}