{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { ensureArray, functionalUpdate, isValidTimeout, noop, replaceEqualDeep, timeUntilStale } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { getLogger } from './logger';\nimport { Retryer, isCancelledError } from './retryer'; // TYPES\n// CLASS\n\nexport var Query = /*#__PURE__*/function () {\n  function Query(config) {\n    this.defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.cache = config.cache;\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.initialState = config.state || this.getDefaultState(this.options);\n    this.state = this.initialState;\n    this.scheduleGc();\n  }\n\n  var _proto = Query.prototype;\n\n  _proto.setOptions = function setOptions(options) {\n    var _this$options$cacheTi;\n\n    this.options = _extends({}, this.defaultOptions, options); // Default to 5 minutes if not cache time is set\n\n    this.cacheTime = Math.max(this.cacheTime || 0, (_this$options$cacheTi = this.options.cacheTime) != null ? _this$options$cacheTi : 5 * 60 * 1000);\n  };\n\n  _proto.setDefaultOptions = function setDefaultOptions(options) {\n    this.defaultOptions = options;\n  };\n\n  _proto.scheduleGc = function scheduleGc() {\n    var _this = this;\n\n    this.clearGcTimeout();\n\n    if (isValidTimeout(this.cacheTime)) {\n      this.gcTimeout = setTimeout(function () {\n        _this.optionalRemove();\n      }, this.cacheTime);\n    }\n  };\n\n  _proto.clearGcTimeout = function clearGcTimeout() {\n    clearTimeout(this.gcTimeout);\n    this.gcTimeout = undefined;\n  };\n\n  _proto.optionalRemove = function optionalRemove() {\n    if (!this.observers.length && !this.state.isFetching) {\n      this.cache.remove(this);\n    }\n  };\n\n  _proto.setData = function setData(updater, options) {\n    var _this$options$isDataE, _this$options;\n\n    var prevData = this.state.data; // Get the new data\n\n    var data = functionalUpdate(updater, prevData); // Use prev data if an isDataEqual function is defined and returns `true`\n\n    if ((_this$options$isDataE = (_this$options = this.options).isDataEqual) == null ? void 0 : _this$options$isDataE.call(_this$options, prevData, data)) {\n      data = prevData;\n    } else if (this.options.structuralSharing !== false) {\n      // Structurally share data between prev and new data if needed\n      data = replaceEqualDeep(prevData, data);\n    } // Set data and mark it as cached\n\n\n    this.dispatch({\n      data: data,\n      type: 'success',\n      dataUpdatedAt: options == null ? void 0 : options.updatedAt\n    });\n    return data;\n  };\n\n  _proto.setState = function setState(state, setStateOptions) {\n    this.dispatch({\n      type: 'setState',\n      state: state,\n      setStateOptions: setStateOptions\n    });\n  };\n\n  _proto.cancel = function cancel(options) {\n    var _this$retryer;\n\n    var promise = this.promise;\n    (_this$retryer = this.retryer) == null ? void 0 : _this$retryer.cancel(options);\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve();\n  };\n\n  _proto.destroy = function destroy() {\n    this.clearGcTimeout();\n    this.cancel({\n      silent: true\n    });\n  };\n\n  _proto.reset = function reset() {\n    this.destroy();\n    this.setState(this.initialState);\n  };\n\n  _proto.isActive = function isActive() {\n    return this.observers.some(function (observer) {\n      return observer.options.enabled !== false;\n    });\n  };\n\n  _proto.isFetching = function isFetching() {\n    return this.state.isFetching;\n  };\n\n  _proto.isStale = function isStale() {\n    return this.state.isInvalidated || !this.state.dataUpdatedAt || this.observers.some(function (observer) {\n      return observer.getCurrentResult().isStale;\n    });\n  };\n\n  _proto.isStaleByTime = function isStaleByTime(staleTime) {\n    if (staleTime === void 0) {\n      staleTime = 0;\n    }\n\n    return this.state.isInvalidated || !this.state.dataUpdatedAt || !timeUntilStale(this.state.dataUpdatedAt, staleTime);\n  };\n\n  _proto.onFocus = function onFocus() {\n    var _this$retryer2;\n\n    var observer = this.observers.find(function (x) {\n      return x.shouldFetchOnWindowFocus();\n    });\n\n    if (observer) {\n      observer.refetch();\n    } // Continue fetch if currently paused\n\n\n    (_this$retryer2 = this.retryer) == null ? void 0 : _this$retryer2.continue();\n  };\n\n  _proto.onOnline = function onOnline() {\n    var _this$retryer3;\n\n    var observer = this.observers.find(function (x) {\n      return x.shouldFetchOnReconnect();\n    });\n\n    if (observer) {\n      observer.refetch();\n    } // Continue fetch if currently paused\n\n\n    (_this$retryer3 = this.retryer) == null ? void 0 : _this$retryer3.continue();\n  };\n\n  _proto.addObserver = function addObserver(observer) {\n    if (this.observers.indexOf(observer) === -1) {\n      this.observers.push(observer); // Stop the query from being garbage collected\n\n      this.clearGcTimeout();\n      this.cache.notify({\n        type: 'observerAdded',\n        query: this,\n        observer: observer\n      });\n    }\n  };\n\n  _proto.removeObserver = function removeObserver(observer) {\n    if (this.observers.indexOf(observer) !== -1) {\n      this.observers = this.observers.filter(function (x) {\n        return x !== observer;\n      });\n\n      if (!this.observers.length) {\n        // If the transport layer does not support cancellation\n        // we'll let the query continue so the result can be cached\n        if (this.retryer) {\n          if (this.retryer.isTransportCancelable) {\n            this.retryer.cancel({\n              revert: true\n            });\n          } else {\n            this.retryer.cancelRetry();\n          }\n        }\n\n        if (this.cacheTime) {\n          this.scheduleGc();\n        } else {\n          this.cache.remove(this);\n        }\n      }\n\n      this.cache.notify({\n        type: 'observerRemoved',\n        query: this,\n        observer: observer\n      });\n    }\n  };\n\n  _proto.invalidate = function invalidate() {\n    if (!this.state.isInvalidated) {\n      this.dispatch({\n        type: 'invalidate'\n      });\n    }\n  };\n\n  _proto.fetch = function fetch(options, fetchOptions) {\n    var _this2 = this,\n        _this$options$behavio,\n        _context$fetchOptions;\n\n    if (this.state.isFetching) {\n      if (this.state.dataUpdatedAt && (fetchOptions == null ? void 0 : fetchOptions.cancelRefetch)) {\n        // Silently cancel current fetch if the user wants to cancel refetches\n        this.cancel({\n          silent: true\n        });\n      } else if (this.promise) {\n        // Return current promise if we are already fetching\n        return this.promise;\n      }\n    } // Update config if passed, otherwise the config from the last execution is used\n\n\n    if (options) {\n      this.setOptions(options);\n    } // Use the options from the first observer with a query function if no function is found.\n    // This can happen when the query is hydrated or created with setQueryData.\n\n\n    if (!this.options.queryFn) {\n      var observer = this.observers.find(function (x) {\n        return x.options.queryFn;\n      });\n\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    } // Create query function context\n\n\n    var queryKey = ensureArray(this.queryKey);\n    var queryFnContext = {\n      queryKey: queryKey,\n      pageParam: undefined\n    }; // Create fetch function\n\n    var fetchFn = function fetchFn() {\n      return _this2.options.queryFn ? _this2.options.queryFn(queryFnContext) : Promise.reject('Missing queryFn');\n    }; // Trigger behavior hook\n\n\n    var context = {\n      fetchOptions: fetchOptions,\n      options: this.options,\n      queryKey: queryKey,\n      state: this.state,\n      fetchFn: fetchFn\n    };\n\n    if ((_this$options$behavio = this.options.behavior) == null ? void 0 : _this$options$behavio.onFetch) {\n      var _this$options$behavio2;\n\n      (_this$options$behavio2 = this.options.behavior) == null ? void 0 : _this$options$behavio2.onFetch(context);\n    } // Store state in case the current fetch needs to be reverted\n\n\n    this.revertState = this.state; // Set to fetching state if not already in it\n\n    if (!this.state.isFetching || this.state.fetchMeta !== ((_context$fetchOptions = context.fetchOptions) == null ? void 0 : _context$fetchOptions.meta)) {\n      var _context$fetchOptions2;\n\n      this.dispatch({\n        type: 'fetch',\n        meta: (_context$fetchOptions2 = context.fetchOptions) == null ? void 0 : _context$fetchOptions2.meta\n      });\n    } // Try to fetch the data\n\n\n    this.retryer = new Retryer({\n      fn: context.fetchFn,\n      onSuccess: function onSuccess(data) {\n        _this2.setData(data); // Remove query after fetching if cache time is 0\n\n\n        if (_this2.cacheTime === 0) {\n          _this2.optionalRemove();\n        }\n      },\n      onError: function onError(error) {\n        // Optimistically update state if needed\n        if (!(isCancelledError(error) && error.silent)) {\n          _this2.dispatch({\n            type: 'error',\n            error: error\n          });\n        }\n\n        if (!isCancelledError(error)) {\n          // Notify cache callback\n          if (_this2.cache.config.onError) {\n            _this2.cache.config.onError(error, _this2);\n          } // Log error\n\n\n          getLogger().error(error);\n        } // Remove query after fetching if cache time is 0\n\n\n        if (_this2.cacheTime === 0) {\n          _this2.optionalRemove();\n        }\n      },\n      onFail: function onFail() {\n        _this2.dispatch({\n          type: 'failed'\n        });\n      },\n      onPause: function onPause() {\n        _this2.dispatch({\n          type: 'pause'\n        });\n      },\n      onContinue: function onContinue() {\n        _this2.dispatch({\n          type: 'continue'\n        });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay\n    });\n    this.promise = this.retryer.promise;\n    return this.promise;\n  };\n\n  _proto.dispatch = function dispatch(action) {\n    var _this3 = this;\n\n    this.state = this.reducer(this.state, action);\n    notifyManager.batch(function () {\n      _this3.observers.forEach(function (observer) {\n        observer.onQueryUpdate(action);\n      });\n\n      _this3.cache.notify({\n        query: _this3,\n        type: 'queryUpdated',\n        action: action\n      });\n    });\n  };\n\n  _proto.getDefaultState = function getDefaultState(options) {\n    var data = typeof options.initialData === 'function' ? options.initialData() : options.initialData;\n    var hasInitialData = typeof options.initialData !== 'undefined';\n    var initialDataUpdatedAt = hasInitialData ? typeof options.initialDataUpdatedAt === 'function' ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n    var hasData = typeof data !== 'undefined';\n    return {\n      data: data,\n      dataUpdateCount: 0,\n      dataUpdatedAt: hasData ? initialDataUpdatedAt != null ? initialDataUpdatedAt : Date.now() : 0,\n      error: null,\n      errorUpdateCount: 0,\n      errorUpdatedAt: 0,\n      fetchFailureCount: 0,\n      fetchMeta: null,\n      isFetching: false,\n      isInvalidated: false,\n      isPaused: false,\n      status: hasData ? 'success' : 'idle'\n    };\n  };\n\n  _proto.reducer = function reducer(state, action) {\n    var _action$meta, _action$dataUpdatedAt;\n\n    switch (action.type) {\n      case 'failed':\n        return _extends({}, state, {\n          fetchFailureCount: state.fetchFailureCount + 1\n        });\n\n      case 'pause':\n        return _extends({}, state, {\n          isPaused: true\n        });\n\n      case 'continue':\n        return _extends({}, state, {\n          isPaused: false\n        });\n\n      case 'fetch':\n        return _extends({}, state, {\n          fetchFailureCount: 0,\n          fetchMeta: (_action$meta = action.meta) != null ? _action$meta : null,\n          isFetching: true,\n          isPaused: false,\n          status: !state.dataUpdatedAt ? 'loading' : state.status\n        });\n\n      case 'success':\n        return _extends({}, state, {\n          data: action.data,\n          dataUpdateCount: state.dataUpdateCount + 1,\n          dataUpdatedAt: (_action$dataUpdatedAt = action.dataUpdatedAt) != null ? _action$dataUpdatedAt : Date.now(),\n          error: null,\n          fetchFailureCount: 0,\n          isFetching: false,\n          isInvalidated: false,\n          isPaused: false,\n          status: 'success'\n        });\n\n      case 'error':\n        var error = action.error;\n\n        if (isCancelledError(error) && error.revert && this.revertState) {\n          return _extends({}, this.revertState);\n        }\n\n        return _extends({}, state, {\n          error: error,\n          errorUpdateCount: state.errorUpdateCount + 1,\n          errorUpdatedAt: Date.now(),\n          fetchFailureCount: state.fetchFailureCount + 1,\n          isFetching: false,\n          isPaused: false,\n          status: 'error'\n        });\n\n      case 'invalidate':\n        return _extends({}, state, {\n          isInvalidated: true\n        });\n\n      case 'setState':\n        return _extends({}, state, action.state);\n\n      default:\n        return state;\n    }\n  };\n\n  return Query;\n}();","map":{"version":3,"names":["_extends","ensureArray","functionalUpdate","isValidTimeout","noop","replaceEqualDeep","timeUntilStale","notifyManager","getLogger","Retryer","isCancelledError","Query","config","defaultOptions","setOptions","options","observers","cache","queryKey","queryHash","initialState","state","getDefaultState","scheduleGc","_proto","prototype","_this$options$cacheTi","cacheTime","Math","max","setDefaultOptions","_this","clearGcTimeout","gcTimeout","setTimeout","optionalRemove","clearTimeout","undefined","length","isFetching","remove","setData","updater","_this$options$isDataE","_this$options","prevData","data","isDataEqual","call","structuralSharing","dispatch","type","dataUpdatedAt","updatedAt","setState","setStateOptions","cancel","_this$retryer","promise","retryer","then","catch","Promise","resolve","destroy","silent","reset","isActive","some","observer","enabled","isStale","isInvalidated","getCurrentResult","isStaleByTime","staleTime","onFocus","_this$retryer2","find","x","shouldFetchOnWindowFocus","refetch","continue","onOnline","_this$retryer3","shouldFetchOnReconnect","addObserver","indexOf","push","notify","query","removeObserver","filter","isTransportCancelable","revert","cancelRetry","invalidate","fetch","fetchOptions","_this2","_this$options$behavio","_context$fetchOptions","cancelRefetch","queryFn","queryFnContext","pageParam","fetchFn","reject","context","behavior","onFetch","_this$options$behavio2","revertState","fetchMeta","meta","_context$fetchOptions2","fn","onSuccess","onError","error","onFail","onPause","onContinue","retry","retryDelay","action","_this3","reducer","batch","forEach","onQueryUpdate","initialData","hasInitialData","initialDataUpdatedAt","hasData","dataUpdateCount","Date","now","errorUpdateCount","errorUpdatedAt","fetchFailureCount","isPaused","status","_action$meta","_action$dataUpdatedAt"],"sources":["/Users/seanley/Desktop/Benchmetric/client/node_modules/react-query/es/core/query.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { ensureArray, functionalUpdate, isValidTimeout, noop, replaceEqualDeep, timeUntilStale } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { getLogger } from './logger';\nimport { Retryer, isCancelledError } from './retryer'; // TYPES\n\n// CLASS\nexport var Query = /*#__PURE__*/function () {\n  function Query(config) {\n    this.defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.cache = config.cache;\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.initialState = config.state || this.getDefaultState(this.options);\n    this.state = this.initialState;\n    this.scheduleGc();\n  }\n\n  var _proto = Query.prototype;\n\n  _proto.setOptions = function setOptions(options) {\n    var _this$options$cacheTi;\n\n    this.options = _extends({}, this.defaultOptions, options); // Default to 5 minutes if not cache time is set\n\n    this.cacheTime = Math.max(this.cacheTime || 0, (_this$options$cacheTi = this.options.cacheTime) != null ? _this$options$cacheTi : 5 * 60 * 1000);\n  };\n\n  _proto.setDefaultOptions = function setDefaultOptions(options) {\n    this.defaultOptions = options;\n  };\n\n  _proto.scheduleGc = function scheduleGc() {\n    var _this = this;\n\n    this.clearGcTimeout();\n\n    if (isValidTimeout(this.cacheTime)) {\n      this.gcTimeout = setTimeout(function () {\n        _this.optionalRemove();\n      }, this.cacheTime);\n    }\n  };\n\n  _proto.clearGcTimeout = function clearGcTimeout() {\n    clearTimeout(this.gcTimeout);\n    this.gcTimeout = undefined;\n  };\n\n  _proto.optionalRemove = function optionalRemove() {\n    if (!this.observers.length && !this.state.isFetching) {\n      this.cache.remove(this);\n    }\n  };\n\n  _proto.setData = function setData(updater, options) {\n    var _this$options$isDataE, _this$options;\n\n    var prevData = this.state.data; // Get the new data\n\n    var data = functionalUpdate(updater, prevData); // Use prev data if an isDataEqual function is defined and returns `true`\n\n    if ((_this$options$isDataE = (_this$options = this.options).isDataEqual) == null ? void 0 : _this$options$isDataE.call(_this$options, prevData, data)) {\n      data = prevData;\n    } else if (this.options.structuralSharing !== false) {\n      // Structurally share data between prev and new data if needed\n      data = replaceEqualDeep(prevData, data);\n    } // Set data and mark it as cached\n\n\n    this.dispatch({\n      data: data,\n      type: 'success',\n      dataUpdatedAt: options == null ? void 0 : options.updatedAt\n    });\n    return data;\n  };\n\n  _proto.setState = function setState(state, setStateOptions) {\n    this.dispatch({\n      type: 'setState',\n      state: state,\n      setStateOptions: setStateOptions\n    });\n  };\n\n  _proto.cancel = function cancel(options) {\n    var _this$retryer;\n\n    var promise = this.promise;\n    (_this$retryer = this.retryer) == null ? void 0 : _this$retryer.cancel(options);\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve();\n  };\n\n  _proto.destroy = function destroy() {\n    this.clearGcTimeout();\n    this.cancel({\n      silent: true\n    });\n  };\n\n  _proto.reset = function reset() {\n    this.destroy();\n    this.setState(this.initialState);\n  };\n\n  _proto.isActive = function isActive() {\n    return this.observers.some(function (observer) {\n      return observer.options.enabled !== false;\n    });\n  };\n\n  _proto.isFetching = function isFetching() {\n    return this.state.isFetching;\n  };\n\n  _proto.isStale = function isStale() {\n    return this.state.isInvalidated || !this.state.dataUpdatedAt || this.observers.some(function (observer) {\n      return observer.getCurrentResult().isStale;\n    });\n  };\n\n  _proto.isStaleByTime = function isStaleByTime(staleTime) {\n    if (staleTime === void 0) {\n      staleTime = 0;\n    }\n\n    return this.state.isInvalidated || !this.state.dataUpdatedAt || !timeUntilStale(this.state.dataUpdatedAt, staleTime);\n  };\n\n  _proto.onFocus = function onFocus() {\n    var _this$retryer2;\n\n    var observer = this.observers.find(function (x) {\n      return x.shouldFetchOnWindowFocus();\n    });\n\n    if (observer) {\n      observer.refetch();\n    } // Continue fetch if currently paused\n\n\n    (_this$retryer2 = this.retryer) == null ? void 0 : _this$retryer2.continue();\n  };\n\n  _proto.onOnline = function onOnline() {\n    var _this$retryer3;\n\n    var observer = this.observers.find(function (x) {\n      return x.shouldFetchOnReconnect();\n    });\n\n    if (observer) {\n      observer.refetch();\n    } // Continue fetch if currently paused\n\n\n    (_this$retryer3 = this.retryer) == null ? void 0 : _this$retryer3.continue();\n  };\n\n  _proto.addObserver = function addObserver(observer) {\n    if (this.observers.indexOf(observer) === -1) {\n      this.observers.push(observer); // Stop the query from being garbage collected\n\n      this.clearGcTimeout();\n      this.cache.notify({\n        type: 'observerAdded',\n        query: this,\n        observer: observer\n      });\n    }\n  };\n\n  _proto.removeObserver = function removeObserver(observer) {\n    if (this.observers.indexOf(observer) !== -1) {\n      this.observers = this.observers.filter(function (x) {\n        return x !== observer;\n      });\n\n      if (!this.observers.length) {\n        // If the transport layer does not support cancellation\n        // we'll let the query continue so the result can be cached\n        if (this.retryer) {\n          if (this.retryer.isTransportCancelable) {\n            this.retryer.cancel({\n              revert: true\n            });\n          } else {\n            this.retryer.cancelRetry();\n          }\n        }\n\n        if (this.cacheTime) {\n          this.scheduleGc();\n        } else {\n          this.cache.remove(this);\n        }\n      }\n\n      this.cache.notify({\n        type: 'observerRemoved',\n        query: this,\n        observer: observer\n      });\n    }\n  };\n\n  _proto.invalidate = function invalidate() {\n    if (!this.state.isInvalidated) {\n      this.dispatch({\n        type: 'invalidate'\n      });\n    }\n  };\n\n  _proto.fetch = function fetch(options, fetchOptions) {\n    var _this2 = this,\n        _this$options$behavio,\n        _context$fetchOptions;\n\n    if (this.state.isFetching) {\n      if (this.state.dataUpdatedAt && (fetchOptions == null ? void 0 : fetchOptions.cancelRefetch)) {\n        // Silently cancel current fetch if the user wants to cancel refetches\n        this.cancel({\n          silent: true\n        });\n      } else if (this.promise) {\n        // Return current promise if we are already fetching\n        return this.promise;\n      }\n    } // Update config if passed, otherwise the config from the last execution is used\n\n\n    if (options) {\n      this.setOptions(options);\n    } // Use the options from the first observer with a query function if no function is found.\n    // This can happen when the query is hydrated or created with setQueryData.\n\n\n    if (!this.options.queryFn) {\n      var observer = this.observers.find(function (x) {\n        return x.options.queryFn;\n      });\n\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    } // Create query function context\n\n\n    var queryKey = ensureArray(this.queryKey);\n    var queryFnContext = {\n      queryKey: queryKey,\n      pageParam: undefined\n    }; // Create fetch function\n\n    var fetchFn = function fetchFn() {\n      return _this2.options.queryFn ? _this2.options.queryFn(queryFnContext) : Promise.reject('Missing queryFn');\n    }; // Trigger behavior hook\n\n\n    var context = {\n      fetchOptions: fetchOptions,\n      options: this.options,\n      queryKey: queryKey,\n      state: this.state,\n      fetchFn: fetchFn\n    };\n\n    if ((_this$options$behavio = this.options.behavior) == null ? void 0 : _this$options$behavio.onFetch) {\n      var _this$options$behavio2;\n\n      (_this$options$behavio2 = this.options.behavior) == null ? void 0 : _this$options$behavio2.onFetch(context);\n    } // Store state in case the current fetch needs to be reverted\n\n\n    this.revertState = this.state; // Set to fetching state if not already in it\n\n    if (!this.state.isFetching || this.state.fetchMeta !== ((_context$fetchOptions = context.fetchOptions) == null ? void 0 : _context$fetchOptions.meta)) {\n      var _context$fetchOptions2;\n\n      this.dispatch({\n        type: 'fetch',\n        meta: (_context$fetchOptions2 = context.fetchOptions) == null ? void 0 : _context$fetchOptions2.meta\n      });\n    } // Try to fetch the data\n\n\n    this.retryer = new Retryer({\n      fn: context.fetchFn,\n      onSuccess: function onSuccess(data) {\n        _this2.setData(data); // Remove query after fetching if cache time is 0\n\n\n        if (_this2.cacheTime === 0) {\n          _this2.optionalRemove();\n        }\n      },\n      onError: function onError(error) {\n        // Optimistically update state if needed\n        if (!(isCancelledError(error) && error.silent)) {\n          _this2.dispatch({\n            type: 'error',\n            error: error\n          });\n        }\n\n        if (!isCancelledError(error)) {\n          // Notify cache callback\n          if (_this2.cache.config.onError) {\n            _this2.cache.config.onError(error, _this2);\n          } // Log error\n\n\n          getLogger().error(error);\n        } // Remove query after fetching if cache time is 0\n\n\n        if (_this2.cacheTime === 0) {\n          _this2.optionalRemove();\n        }\n      },\n      onFail: function onFail() {\n        _this2.dispatch({\n          type: 'failed'\n        });\n      },\n      onPause: function onPause() {\n        _this2.dispatch({\n          type: 'pause'\n        });\n      },\n      onContinue: function onContinue() {\n        _this2.dispatch({\n          type: 'continue'\n        });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay\n    });\n    this.promise = this.retryer.promise;\n    return this.promise;\n  };\n\n  _proto.dispatch = function dispatch(action) {\n    var _this3 = this;\n\n    this.state = this.reducer(this.state, action);\n    notifyManager.batch(function () {\n      _this3.observers.forEach(function (observer) {\n        observer.onQueryUpdate(action);\n      });\n\n      _this3.cache.notify({\n        query: _this3,\n        type: 'queryUpdated',\n        action: action\n      });\n    });\n  };\n\n  _proto.getDefaultState = function getDefaultState(options) {\n    var data = typeof options.initialData === 'function' ? options.initialData() : options.initialData;\n    var hasInitialData = typeof options.initialData !== 'undefined';\n    var initialDataUpdatedAt = hasInitialData ? typeof options.initialDataUpdatedAt === 'function' ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n    var hasData = typeof data !== 'undefined';\n    return {\n      data: data,\n      dataUpdateCount: 0,\n      dataUpdatedAt: hasData ? initialDataUpdatedAt != null ? initialDataUpdatedAt : Date.now() : 0,\n      error: null,\n      errorUpdateCount: 0,\n      errorUpdatedAt: 0,\n      fetchFailureCount: 0,\n      fetchMeta: null,\n      isFetching: false,\n      isInvalidated: false,\n      isPaused: false,\n      status: hasData ? 'success' : 'idle'\n    };\n  };\n\n  _proto.reducer = function reducer(state, action) {\n    var _action$meta, _action$dataUpdatedAt;\n\n    switch (action.type) {\n      case 'failed':\n        return _extends({}, state, {\n          fetchFailureCount: state.fetchFailureCount + 1\n        });\n\n      case 'pause':\n        return _extends({}, state, {\n          isPaused: true\n        });\n\n      case 'continue':\n        return _extends({}, state, {\n          isPaused: false\n        });\n\n      case 'fetch':\n        return _extends({}, state, {\n          fetchFailureCount: 0,\n          fetchMeta: (_action$meta = action.meta) != null ? _action$meta : null,\n          isFetching: true,\n          isPaused: false,\n          status: !state.dataUpdatedAt ? 'loading' : state.status\n        });\n\n      case 'success':\n        return _extends({}, state, {\n          data: action.data,\n          dataUpdateCount: state.dataUpdateCount + 1,\n          dataUpdatedAt: (_action$dataUpdatedAt = action.dataUpdatedAt) != null ? _action$dataUpdatedAt : Date.now(),\n          error: null,\n          fetchFailureCount: 0,\n          isFetching: false,\n          isInvalidated: false,\n          isPaused: false,\n          status: 'success'\n        });\n\n      case 'error':\n        var error = action.error;\n\n        if (isCancelledError(error) && error.revert && this.revertState) {\n          return _extends({}, this.revertState);\n        }\n\n        return _extends({}, state, {\n          error: error,\n          errorUpdateCount: state.errorUpdateCount + 1,\n          errorUpdatedAt: Date.now(),\n          fetchFailureCount: state.fetchFailureCount + 1,\n          isFetching: false,\n          isPaused: false,\n          status: 'error'\n        });\n\n      case 'invalidate':\n        return _extends({}, state, {\n          isInvalidated: true\n        });\n\n      case 'setState':\n        return _extends({}, state, action.state);\n\n      default:\n        return state;\n    }\n  };\n\n  return Query;\n}();"],"mappings":"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"},"metadata":{},"sourceType":"module"}